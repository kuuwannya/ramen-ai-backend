steps:
  - id: Build
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - "--no-cache"
      - "-t"
      - >-
        $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - .
      - "-f"
      - Dockerfile

  - id: Push
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA

  - id: Apply Migrations
    name: gcr.io/google-appengine/exec-wrapper
    entrypoint: "bash"
    args:
      - -c
      - |
        /buildstep/execute.sh \
          -i gcr.io/$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA\
          -s ${_AR_PROJECT_ID}:${_DEPLOY_REGION}:${_INSTANCE_NAME} \
          -e CLOUD_SQL_CONNECTION_NAME="943228427206:asia-northeast1:ramen-ai-db-instance" \
          -- bundle exec rails db:migrate

  - id: Deploy
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - "--platform=managed"
      - >-
        --image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - "--region=$_DEPLOY_REGION"
      - "--quiet"
    entrypoint: gcloud

images:
  - >-
    $_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _DEPLOY_REGION: asia-northeast1
  _AR_HOSTNAME: asia-northeast1-docker.pkg.dev
  _AR_REPOSITORY: cloud-run-source-deploy
  _AR_PROJECT_ID: ramen-ai
  _SERVICE_NAME: ramen-ai-backend-service
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - ramen-ai-backend-service
